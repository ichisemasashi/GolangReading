package main

import "fmt"

/* このプログラムを実行すると、 "ping" メッセージが チャネルを通して
   一方のゴルーチンからもう一方へ 正しく渡されていることが分かります。
   デフォルトでは、送る側と受ける側が準備できるまで、 送受信はブロック
   されます。この性質により、何か特別な 同期処理を書かなくても、
   プログラムの最後で "ping" メッセージを受信するまで待つことができるのです。 */
func main() {
	// make(chan 値の型) で新しいチャネルを作成します。
	// チャネルは送受信する値で型付けされます。
	messages := make(chan string)

	// channel <- 構文で、チャネルへ値を 送信します。 ここでは、
	// 新しいゴルーチンから messages チャネルへ "ping" という値
	// を送信しています。
	go func() { messages <- "ping" }()

	// <-channel 構文で、チャネルから値を 受信します。
	// ここでは、上で送信した "ping" メッセージを受信して
	// 画面に表示しています。
	msg := <-messages
	fmt.Println(msg)
}
